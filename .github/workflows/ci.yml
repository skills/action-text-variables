name: Continuous Integration

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  run-action-tests-json:
    name: Test Action with JSON vars
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Template Text
        id: template-text
        uses: ./
        with:
          template-text:
            'Hello {{ login }}, nice to meet you {{ person.role }}!'
          template-vars: |
            {
              "login": "Octobi Wan Catnobi",
              "person": { "role": "Master Jedi" }
            }

      - name: Verify Template Text Output
        env:
          UPDATED_TEXT: ${{ steps.template-text.outputs.updated-text }}
        run: |
          echo "$UPDATED_TEXT" | grep -q "Octobi Wan Catnobi" || exit 1
          echo "$UPDATED_TEXT" | grep -q "Master Jedi" || exit 1

      - name: Template File
        id: template-file
        uses: ./
        with:
          template-file: ./__tests__/sample-nunjucks-template.md
          template-vars: |
            {
              "name": "Spidertocat",
              "user": { 
                "email": "spider@example.com",
                "role": "admin" 
              },
              "repositories": [
                { "name": "web-crawler", "language": "Python" },
                { "name": "spider-bot", "language": "JavaScript" }
              ]
            }

      - name: Verify Text File JSON Output
        env:
          UPDATED_TEXT: ${{ steps.template-file.outputs.updated-text }}
        run: |
          echo "$UPDATED_TEXT" | grep -q "Spidertocat" || exit 1
          echo "$UPDATED_TEXT" | grep -q "spider@example.com" || exit 1
          echo "$UPDATED_TEXT" | grep -q "ðŸ”‘ You have admin privileges!" || exit 1
          echo "$UPDATED_TEXT" | grep -q "web-crawler (Python)" || exit 1
          echo "$UPDATED_TEXT" | grep -q "spider-bot (JavaScript)" || exit 1

  run-action-tests-yaml:
    name: Test Action with YAML vars
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Template Text
        id: template-text
        uses: ./
        with:
          template-text:
            'Hello {{ login }}, nice to meet you {{ person.role }}!'
          template-vars: |
            login: Octoclark Kentocat
            person:
              role: Librarian

      - name: Verify Template Text Output
        env:
          UPDATED_TEXT: ${{ steps.template-text.outputs.updated-text }}
        run: |
          echo "$UPDATED_TEXT" | grep -q "Octoclark Kentocat" || exit 1
          echo "$UPDATED_TEXT" | grep -q "Librarian" || exit 1

      - name: Template File
        id: template-file
        uses: ./
        with:
          template-file: ./__tests__/sample-nunjucks-template.md
          template-vars: |
            name: Codercat
            user:
              email: coder@example.com
              role: user
            repositories:
              - name: code-analyzer
                language: Go
              - name: dev-tools
                language: Rust
            multiline_paragraph: |
              This is a yaml multiline
              paragraph example.

      - name: Verify Template File Output
        env:
          UPDATED_TEXT: ${{ steps.template-file.outputs.updated-text }}
        run: |
          echo "$UPDATED_TEXT" | grep -q "Codercat" || exit 1
          echo "$UPDATED_TEXT" | grep -q "coder@example.com" || exit 1
          echo "$UPDATED_TEXT" | grep -q "ðŸ‘¤ Regular user access" || exit 1
          echo "$UPDATED_TEXT" | grep -q "code-analyzer (Go)" || exit 1
          echo "$UPDATED_TEXT" | grep -q "dev-tools (Rust)" || exit 1
          echo "$UPDATED_TEXT" | grep -q "This is a yaml multiline" || exit 1
          echo "$UPDATED_TEXT" | grep -q "paragraph example" || exit 1
